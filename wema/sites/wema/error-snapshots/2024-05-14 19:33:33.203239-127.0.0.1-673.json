{
 "etype": "OperationalError",
 "evalue": "OperationalError(1054, \"Unknown column 'tabClinical Procedure.patient_encounter' in 'where clause'\")",
 "exception": {
  "args": [
   40,
   49,
   48,
   53,
   52,
   44,
   32,
   34,
   85,
   110,
   107,
   110,
   111,
   119,
   110,
   32,
   99,
   111,
   108,
   117,
   109,
   110,
   32,
   39,
   116,
   97,
   98,
   67,
   108,
   105,
   110,
   105,
   99,
   97,
   108,
   32,
   80,
   114,
   111,
   99,
   101,
   100,
   117,
   114,
   101,
   46,
   112,
   97,
   116,
   105,
   101,
   110,
   116,
   95,
   101,
   110,
   99,
   111,
   117,
   110,
   116,
   101,
   114,
   39,
   32,
   105,
   110,
   32,
   39,
   119,
   104,
   101,
   114,
   101,
   32,
   99,
   108,
   97,
   117,
   115,
   101,
   39,
   34,
   41
  ],
  "with_traceback": [
   60,
   98,
   117,
   105,
   108,
   116,
   45,
   105,
   110,
   32,
   109,
   101,
   116,
   104,
   111,
   100,
   32,
   119,
   105,
   116,
   104,
   95,
   116,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   111,
   102,
   32,
   79,
   112,
   101,
   114,
   97,
   116,
   105,
   111,
   110,
   97,
   108,
   69,
   114,
   114,
   111,
   114,
   32,
   111,
   98,
   106,
   101,
   99,
   116,
   62
  ]
 },
 "frames": [
  {
   "call": "(request=<Request 'http://wema:8000/api/method/frappe.des...2Clinical+Procedure%22%5D&_=1715704365245' [GET]>)",
   "dump": {
    "frappe. api": "<module 'frappe.api' from '/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/api.py'>",
    "frappe.api. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py'>",
    "response": "None"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/app.py",
   "func": "application",
   "lines": {
    "64": "",
    "65": "\t\telif request.path.startswith(\"/api/\"):",
    "66": "\t\t\tresponse = frappe.api.handle()",
    "67": "",
    "68": "\t\telif request.path.startswith(\"/backups\"):"
   },
   "lnum": 66
  },
  {
   "call": "()",
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/redward/Des...yground/wema/wema/apps/frappe/frappe/handler.py'>",
    "frappe.handler. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py'>"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/api.py",
   "func": "handle",
   "lines": {
    "53": "\tif call == \"method\":",
    "54": "\t\tfrappe.local.form_dict.cmd = doctype",
    "55": "\t\treturn frappe.handler.handle()",
    "56": "",
    "57": "\telif call == \"resource\":"
   },
   "lnum": 55
  },
  {
   "call": "()",
   "dump": {
    "cmd": "'frappe.desk.notifications.get_open_count'",
    "data": "None",
    "global execute_cmd": "<function execute_cmd>"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/handler.py",
   "func": "handle",
   "lines": {
    "36": "",
    "37": "\tif cmd != \"login\":",
    "38": "\t\tdata = execute_cmd(cmd)",
    "39": "",
    "40": "\t# data can be an empty string or list which are valid responses"
   },
   "lnum": 38
  },
  {
   "call": "(cmd='frappe.desk.notifications.get_open_count', from_async=False)",
   "dump": {
    "frappe. call": "<function call>",
    "frappe. form_dict": "{'doctype': 'Patient Encounter', 'name': 'HLC-EN...cmd': 'frappe.desk.notifications.get_open_count'}",
    "global frappe": "<module 'frappe' from '/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py'>",
    "method": "<function read_only.<locals>.innfn.<locals>.wrapper_fn>"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/handler.py",
   "func": "execute_cmd",
   "lines": {
    "74": "\t\tis_valid_http_method(method)",
    "75": "",
    "76": "\treturn frappe.call(method, **frappe.form_dict)",
    "77": "",
    "78": ""
   },
   "lnum": 76
  },
  {
   "call": "(fn=<function read_only.<locals>.innfn.<locals>.wrapper_fn>, *args=(), **kwargs={'cmd': 'frappe.desk.notifications.get_open_count', 'doctype': 'Patient Encounter', 'items': '[\"Vital Signs\",\"Patient Medical Record\",\"Clinica... Procedure\",\"Sales Invoice\",\"Clinical Procedure\"]', 'name': 'HLC-ENC-2024-00001'})",
   "dump": {
    "args": "()",
    "fn": "<function read_only.<locals>.innfn.<locals>.wrapper_fn>",
    "newargs": "{'cmd': 'frappe.desk.notifications.get_open_count', 'doctype': 'Patient Encounter', 'items': '[\"Vital Signs\",\"Patient Medical Record\",\"Clinica... Procedure\",\"Sales Invoice\",\"Clinical Procedure\"]', 'name': 'HLC-ENC-2024-00001'}"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py",
   "func": "call",
   "lines": {
    "1471": "\tnewargs = get_newargs(fn, kwargs)",
    "1472": "",
    "1473": "\treturn fn(*args, **newargs)",
    "1474": "",
    "1475": ""
   },
   "lnum": 1473
  },
  {
   "call": "(*args=(), **kwargs={'cmd': 'frappe.desk.notifications.get_open_count', 'doctype': 'Patient Encounter', 'items': '[\"Vital Signs\",\"Patient Medical Record\",\"Clinica... Procedure\",\"Sales Invoice\",\"Clinical Procedure\"]', 'name': 'HLC-ENC-2024-00001'})",
   "dump": {
    "args": "()",
    "fn": "<function get_open_count>",
    "global get_newargs": "<function get_newargs>",
    "kwargs": "{'cmd': 'frappe.desk.notifications.get_open_count', 'doctype': 'Patient Encounter', 'items': '[\"Vital Signs\",\"Patient Medical Record\",\"Clinica... Procedure\",\"Sales Invoice\",\"Clinical Procedure\"]', 'name': 'HLC-ENC-2024-00001'}",
    "retval": "undefined"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py",
   "func": "wrapper_fn",
   "lines": {
    "770": "",
    "771": "\t\t\ttry:",
    "772": "\t\t\t\tretval = fn(*args, **get_newargs(fn, kwargs))",
    "773": "\t\t\tfinally:",
    "774": "\t\t\t\tif local and hasattr(local, \"primary_db\"):"
   },
   "lnum": 772
  },
  {
   "call": "(doctype='Patient Encounter', name='HLC-ENC-2024-00001', items=['Vital Signs', 'Patient Medical Record', 'Clinical Record', 'Inpatient Medication Order', 'Lab Test', 'Prescription Returns', 'Consent Form', 'SURGICAL SAFETY CHECKLIST', 'Dental Clinic Procedure', 'Sales Invoice', 'Clinical Procedure'])",
   "dump": {
    "d": "'Clinical Procedure'",
    "distinct": "undefined",
    "fields": "undefined",
    "filters": "{'docstatus': 0, 'patient_encounter': 'HLC-ENC-2024-00001'}",
    "frappe. get_all": "<function get_all>",
    "global frappe": "<module 'frappe' from '/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py'>",
    "ignore_ifnull": "undefined",
    "limit": "undefined"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/desk/notifications.py",
   "func": "get_open_count",
   "lines": {
    "278": "\t\t\tfilters[fieldname] = name",
    "279": "\t\t\ttotal = len(",
    "280": "\t\t\t\tfrappe.get_all(d, fields=\"name\", filters=filters, limit=100, distinct=True, ignore_ifnull=True)",
    "281": "\t\t\t)",
    "282": "\t\t\tdata[\"open_count\"] = total"
   },
   "lnum": 280
  },
  {
   "call": "(doctype='Clinical Procedure', *args=(), **kwargs={'distinct': True, 'fields': 'name', 'filters': {'docstatus': 0, 'patient_encounter': 'HLC-ENC-2024-00001'}, 'ignore_ifnull': True, 'ignore_permissions': True, 'limit': 100, 'limit_page_length': 0})",
   "dump": {
    "args": "()",
    "doctype": "'Clinical Procedure'",
    "global get_list": "<function get_list>",
    "kwargs": "{'distinct': True, 'fields': 'name', 'filters': {'docstatus': 0, 'patient_encounter': 'HLC-ENC-2024-00001'}, 'ignore_ifnull': True, 'ignore_permissions': True, 'limit': 100, 'limit_page_length': 0}"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py",
   "func": "get_all",
   "lines": {
    "1755": "\tif not \"limit_page_length\" in kwargs:",
    "1756": "\t\tkwargs[\"limit_page_length\"] = 0",
    "1757": "\treturn get_list(doctype, *args, **kwargs)",
    "1758": "",
    "1759": ""
   },
   "lnum": 1757
  },
  {
   "call": "(doctype='Clinical Procedure', *args=(), **kwargs={'distinct': True, 'fields': 'name', 'filters': {'docstatus': 0, 'patient_encounter': 'HLC-ENC-2024-00001'}, 'ignore_ifnull': True, 'ignore_permissions': True, 'limit': 100, 'limit_page_length': 0})",
   "dump": {
    ").execute": "undefined",
    "args": "()",
    "doctype": "'Clinical Procedure'",
    "frappe": "<module 'frappe' from '/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py'>",
    "frappe. model": "<module 'frappe.model' from '/home/redward/Deskt.../wema/wema/apps/frappe/frappe/model/__init__.py'>",
    "frappe.model. db_query": "<module 'frappe.model.db_query' from '/home/redw.../wema/wema/apps/frappe/frappe/model/db_query.py'>",
    "frappe.model.db_query. DatabaseQuery": "<class 'frappe.model.db_query.DatabaseQuery'>",
    "kwargs": "{'distinct': True, 'fields': 'name', 'filters': {'docstatus': 0, 'patient_encounter': 'HLC-ENC-2024-00001'}, 'ignore_ifnull': True, 'ignore_permissions': True, 'limit': 100, 'limit_page_length': 0}"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py",
   "func": "get_list",
   "lines": {
    "1727": "\timport frappe.model.db_query",
    "1728": "",
    "1729": "\treturn frappe.model.db_query.DatabaseQuery(doctype).execute(*args, **kwargs)",
    "1730": "",
    "1731": ""
   },
   "lnum": 1729
  },
  {
   "call": "(self=<frappe.model.db_query.DatabaseQuery object>, fields='name', filters={'docstatus': 0, 'patient_encounter': 'HLC-ENC-2024-00001'}, or_filters=None, docstatus=None, group_by=None, order_by=None, limit_start=False, limit_page_length=100, as_list=False, with_childnames=False, debug=False, ignore_permissions=True, user=None, with_comment_count=False, join='left join', distinct=True, start=None, page_length=None, limit=100, ignore_ifnull=True, save_user_settings=False, save_user_settings_fields=False, update=None, add_total_row=None, user_settings=None, reference_doctype=None, return_query=False, strict=True, pluck=None, ignore_ddl=False)",
   "dump": {
    "result": "undefined",
    "self": "<frappe.model.db_query.DatabaseQuery object>",
    "self. build_and_run": "<bound method DatabaseQuery.build_and_run of <frappe.model.db_query.DatabaseQuery object>>"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/model/db_query.py",
   "func": "execute",
   "lines": {
    "168": "\t\t\treturn []",
    "169": "",
    "170": "\t\tresult = self.build_and_run()",
    "171": "\t\tif return_query:",
    "172": "\t\t\treturn result"
   },
   "lnum": 170
  },
  {
   "call": "(self=<frappe.model.db_query.DatabaseQuery object>)",
   "dump": {
    "as_dict": "undefined",
    "debug": "undefined",
    "frappe. db": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "frappe.db. sql": "<bound method Database.sql of <frappe.database.mariadb.database.MariaDBDatabase object>>",
    "global frappe": "<module 'frappe' from '/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py'>",
    "ignore_ddl": "undefined",
    "query": "\"select distinct `name`\\n\\t\\t\\tfrom `tabClinical Proc...HLC-ENC-2024-00001'\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\tlimit 100 offset 0\"",
    "self": "<frappe.model.db_query.DatabaseQuery object>",
    "self. as_list": "False",
    "self. debug": "False",
    "self. ignore_ddl": "False",
    "self. update": "None",
    "update": "undefined"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/model/db_query.py",
   "func": "build_and_run",
   "lines": {
    "208": "\t\t\treturn query",
    "209": "\t\telse:",
    "210": "\t\t\treturn frappe.db.sql(",
    "211": "\t\t\t\tquery,",
    "212": "\t\t\t\tas_dict=not self.as_list,"
   },
   "lnum": 210
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, query=\"select distinct `name`\\n\\t\\t\\tfrom `tabClinical Proc...HLC-ENC-2024-00001'\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\tlimit 100 offset 0\", values=(), as_dict=True, as_list=0, formatted=0, debug=False, ignore_ddl=False, as_utf8=0, auto_commit=0, update=None, explain=False)",
   "dump": {
    "query": "\"select distinct `name`\\n\\t\\t\\tfrom `tabClinical Proc...HLC-ENC-2024-00001'\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\tlimit 100 offset 0\"",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. _cursor": "<pymysql.cursors.Cursor object>",
    "self._cursor. execute": "<bound method Cursor.execute of <pymysql.cursors.Cursor object>>"
   },
   "file": "/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/database/database.py",
   "func": "sql",
   "lines": {
    "191": "",
    "192": "\t\t\telse:",
    "193": "\t\t\t\tself._cursor.execute(query)",
    "194": "",
    "195": "\t\t\t\tif frappe.flags.in_migrate:"
   },
   "lnum": 193
  },
  {
   "call": "(self=<pymysql.cursors.Cursor object>, query=\"select distinct `name`\\n\\t\\t\\tfrom `tabClinical Proc...HLC-ENC-2024-00001'\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\tlimit 100 offset 0\", args=None)",
   "dump": {
    "query": "\"select distinct `name`\\n\\t\\t\\tfrom `tabClinical Proc...HLC-ENC-2024-00001'\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\tlimit 100 offset 0\"",
    "result": "undefined",
    "self": "<pymysql.cursors.Cursor object>",
    "self. _query": "<bound method Cursor._query of <pymysql.cursors.Cursor object>>"
   },
   "file": "/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/cursors.py",
   "func": "execute",
   "lines": {
    "156": "        query = self.mogrify(query, args)",
    "157": "",
    "158": "        result = self._query(query)",
    "159": "        self._executed = query",
    "160": "        return result"
   },
   "lnum": 158
  },
  {
   "call": "(self=<pymysql.cursors.Cursor object>, q=\"select distinct `name`\\n\\t\\t\\tfrom `tabClinical Proc...HLC-ENC-2024-00001'\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\tlimit 100 offset 0\")",
   "dump": {
    "conn": "<pymysql.connections.Connection object>",
    "conn. query": "<bound method Connection.query of <pymysql.connections.Connection object>>",
    "q": "\"select distinct `name`\\n\\t\\t\\tfrom `tabClinical Proc...HLC-ENC-2024-00001'\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\tlimit 100 offset 0\""
   },
   "file": "/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/cursors.py",
   "func": "_query",
   "lines": {
    "323": "        conn = self._get_db()",
    "324": "        self._clear_result()",
    "325": "        conn.query(q)",
    "326": "        self._do_get_result()",
    "327": "        return self.rowcount"
   },
   "lnum": 325
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, sql=b\"select distinct `name`\\n\\t\\t\\tfrom `tabClinica...00001'\\n\\t\\t\\t\\n\\t\\t\\t\\n\\t\\t\\tlimit 100 offset 0\", unbuffered=False)",
   "dump": {
    "self": "<pymysql.connections.Connection object>",
    "self. _affected_rows": "0",
    "self. _read_query_result": "<bound method Connection._read_query_result of <pymysql.connections.Connection object>>",
    "unbuffered": "False"
   },
   "file": "/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/connections.py",
   "func": "query",
   "lines": {
    "547": "            sql = sql.encode(self.encoding, \"surrogateescape\")",
    "548": "        self._execute_command(COMMAND.COM_QUERY, sql)",
    "549": "        self._affected_rows = self._read_query_result(unbuffered=unbuffered)",
    "550": "        return self._affected_rows",
    "551": ""
   },
   "lnum": 549
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, unbuffered=False)",
   "dump": {
    "result": "<pymysql.connections.MySQLResult object>",
    "result. read": "<bound method MySQLResult.read of <pymysql.connections.MySQLResult object>>"
   },
   "file": "/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/connections.py",
   "func": "_read_query_result",
   "lines": {
    "777": "        else:",
    "778": "            result = MySQLResult(self)",
    "779": "            result.read()",
    "780": "        self._result = result",
    "781": "        if result.server_status is not None:"
   },
   "lnum": 779
  },
  {
   "call": "(self=<pymysql.connections.MySQLResult object>)",
   "dump": {
    "first_packet": "undefined",
    "self": "<pymysql.connections.MySQLResult object>",
    "self. connection": "None",
    "self.connection._read_packet": "undefined"
   },
   "file": "/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/connections.py",
   "func": "read",
   "lines": {
    "1155": "    def read(self):",
    "1156": "        try:",
    "1157": "            first_packet = self.connection._read_packet()",
    "1158": "",
    "1159": "            if first_packet.is_ok_packet():"
   },
   "lnum": 1157
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, packet_type=<class 'pymysql.protocol.MysqlPacket'>)",
   "dump": {
    "packet": "<pymysql.protocol.MysqlPacket object>",
    "packet. raise_for_error": "<bound method MysqlPacket.raise_for_error of <pymysql.protocol.MysqlPacket object>>"
   },
   "file": "/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/connections.py",
   "func": "_read_packet",
   "lines": {
    "727": "            if self._result is not None and self._result.unbuffered_active is True:",
    "728": "                self._result.unbuffered_active = False",
    "729": "            packet.raise_for_error()",
    "730": "        return packet",
    "731": ""
   },
   "lnum": 729
  },
  {
   "call": "(self=<pymysql.protocol.MysqlPacket object>)",
   "dump": {
    "err. raise_mysql_exception": "<function raise_mysql_exception>",
    "global err": "<module 'pymysql.err' from '/home/redward/Deskto.../env/lib/python3.8/site-packages/pymysql/err.py'>",
    "self": "<pymysql.protocol.MysqlPacket object>",
    "self. _data": "b\"\\xff\\x1e\\x04#42S22Unknown column 'tabClinical Procedure.patient_encounter' in 'where clause'\""
   },
   "file": "/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/protocol.py",
   "func": "raise_for_error",
   "lines": {
    "219": "        if DEBUG:",
    "220": "            print(\"errno =\", errno)",
    "221": "        err.raise_mysql_exception(self._data)",
    "222": "",
    "223": "    def dump(self):"
   },
   "lnum": 221
  },
  {
   "call": "(data=b\"\\xff\\x1e\\x04#42S22Unknown column 'tabClinical Procedure.patient_encounter' in 'where clause'\")",
   "dump": {
    "errno": "1054",
    "errorclass": "<class 'pymysql.err.OperationalError'>",
    "errval": "\"Unknown column 'tabClinical Procedure.patient_encounter' in 'where clause'\""
   },
   "file": "/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/err.py",
   "func": "raise_mysql_exception",
   "lines": {
    "139": "    errval = data[9:].decode(\"utf-8\", \"replace\")",
    "140": "    errorclass = error_map.get(errno)",
    "141": "    if errorclass is None:",
    "142": "        errorclass = InternalError if errno < 1000 else OperationalError",
    "143": "    raise errorclass(errno, errval)"
   },
   "lnum": 143
  }
 ],
 "locals": {
  "data": "b\"\\xff\\x1e\\x04#42S22Unknown column 'tabClinical Procedure.patient_encounter' in 'where clause'\"",
  "errno": "1054",
  "errorclass": "<class 'pymysql.err.OperationalError'>",
  "errval": "Unknown column 'tabClinical Procedure.patient_encounter' in 'where clause'"
 },
 "pyver": "Python 3.8.10: /home/redward/Desktop/playground/wema-backup/wema/env/bin/python (prefix: /home/redward/Desktop/playground/wema-backup/wema/env)",
 "timestamp": "2024-05-14 19:33:33.203442",
 "traceback": "Traceback (most recent call last):\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/app.py\", line 66, in application\n    response = frappe.api.handle()\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/api.py\", line 55, in handle\n    return frappe.handler.handle()\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/handler.py\", line 38, in handle\n    data = execute_cmd(cmd)\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/handler.py\", line 76, in execute_cmd\n    return frappe.call(method, **frappe.form_dict)\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py\", line 1473, in call\n    return fn(*args, **newargs)\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py\", line 772, in wrapper_fn\n    retval = fn(*args, **get_newargs(fn, kwargs))\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/desk/notifications.py\", line 280, in get_open_count\n    frappe.get_all(d, fields=\"name\", filters=filters, limit=100, distinct=True, ignore_ifnull=True)\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py\", line 1757, in get_all\n    return get_list(doctype, *args, **kwargs)\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/__init__.py\", line 1729, in get_list\n    return frappe.model.db_query.DatabaseQuery(doctype).execute(*args, **kwargs)\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/model/db_query.py\", line 170, in execute\n    result = self.build_and_run()\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/model/db_query.py\", line 210, in build_and_run\n    return frappe.db.sql(\n  File \"/home/redward/Desktop/playground/wema/wema/apps/frappe/frappe/database/database.py\", line 193, in sql\n    self._cursor.execute(query)\n  File \"/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/cursors.py\", line 158, in execute\n    result = self._query(query)\n  File \"/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/cursors.py\", line 325, in _query\n    conn.query(q)\n  File \"/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/connections.py\", line 549, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/connections.py\", line 779, in _read_query_result\n    result.read()\n  File \"/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/connections.py\", line 1157, in read\n    first_packet = self.connection._read_packet()\n  File \"/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/connections.py\", line 729, in _read_packet\n    packet.raise_for_error()\n  File \"/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/protocol.py\", line 221, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"/home/redward/Desktop/playground/wema-backup/wema/env/lib/python3.8/site-packages/pymysql/err.py\", line 143, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.OperationalError: (1054, \"Unknown column 'tabClinical Procedure.patient_encounter' in 'where clause'\")\n"
}